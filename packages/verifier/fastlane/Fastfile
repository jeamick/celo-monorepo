fastlane_version '2.94.0'

default_platform(:android)

platform :android do
  # Android Lanes

  desc 'Clean the Android application.'
  lane :clean do
    gradle(task: 'clean', project_dir: 'android/')
  end

  desc 'Build the Android application - requires environment param'
  lane :build do |options|
    environment = options[:environment].capitalize
    ENV["GRADLE_OPTS"] = '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx256m -XX:+HeapDumpOnOutOfMemoryError"'
    gradle(task: 'bundle' + environment + 'JsAndAssets', project_dir: 'android/')
    ENV["GRADLE_OPTS"] = '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx3500m -XX:+HeapDumpOnOutOfMemoryError"'
    gradle(task: 'assemble', build_type: environment, project_dir: 'android/', flags: '-x bundle' + environment + 'JsAndAssets')
  end

  lane :test do
    clean
    build
  end

  desc 'Ship Integration to Playstore Alpha.'
  lane :integration do
    clean
    build(environment: 'integration')
    supply(json_key: 'fastlane/google-play-service-account.json', track: 'internal', track_promote_to: 'internal', package_name: 'org.celo.verifier.integration')
  end

  desc 'Ship Staging to Playstore Alpha.'
  lane :staging do
    clean
    build(environment: 'staging')
    supply(json_key: 'fastlane/google-play-service-account.json', track: 'internal', track_promote_to: 'internal', package_name: 'org.celo.verifier.staging')
  end

  desc 'Ship to Playstore Alpha.'
  lane :production do
    clean
    build(environment: 'release')
    supply(json_key: 'fastlane/google-play-service-account.json', track: 'alpha', track_promote_to: 'alpha', package_name: 'org.celo.verifier')
  end
end


